package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.81

import (
	"context"
	"fmt"

	"github.com/CutyDog/mint-flea/services/gateway/graph/model"
)

// Account is the resolver for the account field.
func (r *queryResolver) Account(ctx context.Context, uid string) (*model.Account, error) {
	// Get account from gRPC service
	account, err := r.AccountClient.GetAccountByUID(ctx, uid)
	if err != nil {
		return nil, fmt.Errorf("failed to get account: %w", err)
	}

	// Check if account is nil
	if account == nil {
		return nil, fmt.Errorf("account not found")
	}

	// Convert protobuf to GraphQL model
	return &model.Account{
		ID:        fmt.Sprintf("%d", account.Id),
		UID:       account.Uid,
		CreatedAt: account.CreatedAt.AsTime().Format("2006-01-02T15:04:05Z07:00"),
		UpdatedAt: account.UpdatedAt.AsTime().Format("2006-01-02T15:04:05Z07:00"),
	}, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//  - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//    it when you're done.
//  - You have helper methods in this file. Move them out to keep these resolver files clean.
/*
	func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }
type mutationResolver struct{ *Resolver }
*/
